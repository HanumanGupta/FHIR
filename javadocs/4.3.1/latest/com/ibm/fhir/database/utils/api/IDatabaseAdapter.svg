<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="748px" preserveAspectRatio="none" style="width:659px;height:748px;" version="1.1" viewBox="0 0 659 748" width="659px" zoomAndPan="magnify"><defs><filter height="300%" id="f1kt3zxf3rsdn0" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[8c3290a45f57832f8a706b85a542e994]
class com.ibm.fhir.database.utils.api.IDatabaseAdapter--><a href="IDatabaseAdapter.html" target="_top" title="IDatabaseAdapter.html" xlink:actuate="onRequest" xlink:href="IDatabaseAdapter.html" xlink:show="new" xlink:title="IDatabaseAdapter.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1kt3zxf3rsdn0)" height="711.7813" id="com.ibm.fhir.database.utils.api.IDatabaseAdapter" style="stroke: #A80036; stroke-width: 1.5;" width="641" x="7" y="7"/><ellipse cx="249.25" cy="25.9688" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M245.1719,21.7344 L245.1719,19.5781 L252.5625,19.5781 L252.5625,21.7344 L250.0938,21.7344 L250.0938,29.8125 L252.5625,29.8125 L252.5625,31.9688 L245.1719,31.9688 L245.1719,29.8125 L247.6406,29.8125 L247.6406,21.7344 L245.1719,21.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="282.25" y="24.9951">IDatabaseAdapter</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="148" x="269.75" y="37.5791">com.ibm.fhir.database.utils.api</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="647" y1="44.9375" y2="44.9375"/><ellipse cx="18" cy="55.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="27" y="59.1479">getTranslator(): IDatabaseTranslator</text><ellipse cx="18" cy="68.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="174" x="27" y="71.9526">createTablespace(String): void</text><ellipse cx="18" cy="81.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="196" x="27" y="84.7573">createTablespace(String, int): void</text><ellipse cx="18" cy="94.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="27" y="97.562">dropTablespace(String): void</text><ellipse cx="18" cy="107.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="284" x="27" y="110.3667">detachPartition(String, String, String, String): void</text><ellipse cx="18" cy="119.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="543" x="27" y="123.1714">createTable(String, String, String, List&lt;ColumnBase&gt;, PrimaryKeyDef, IdentityDef, String): void</text><ellipse cx="18" cy="132.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="27" y="135.9761">createRowType(String, String, List&lt;ColumnBase&gt;): void</text><ellipse cx="18" cy="145.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="27" y="148.7808">createArrType(String, String, String, int): void</text><ellipse cx="18" cy="158.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="168" x="27" y="161.5854">dropType(String, String): void</text><ellipse cx="18" cy="171.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="27" y="174.3901">createOrReplaceProcedure(String, String, Supplier&lt;String&gt;): void</text><ellipse cx="18" cy="183.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="199" x="27" y="187.1948">dropProcedure(String, String): void</text><ellipse cx="18" cy="196.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="464" x="27" y="199.9995">createUniqueIndex(String, String, String, String, List&lt;String&gt;, List&lt;String&gt;): void</text><ellipse cx="18" cy="209.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="27" y="212.8042">createUniqueIndex(String, String, String, String, List&lt;String&gt;): void</text><ellipse cx="18" cy="222.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="27" y="225.6089">createIndex(String, String, String, String, List&lt;String&gt;): void</text><ellipse cx="18" cy="235.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="211" x="27" y="238.4136">createIntVariable(String, String): void</text><ellipse cx="18" cy="248.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="27" y="251.2183">createOrReplacePermission(String, String, String, String): void</text><ellipse cx="18" cy="260.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="263" x="27" y="264.0229">activateRowAccessControl(String, String): void</text><ellipse cx="18" cy="273.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="27" y="276.8276">deactivateRowAccessControl(String, String): void</text><ellipse cx="18" cy="286.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="215" x="27" y="289.6323">setIntVariable(String, String, int): void</text><ellipse cx="18" cy="299.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="172" x="27" y="302.437">dropTable(String, String): void</text><ellipse cx="18" cy="312.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="27" y="315.2417">dropPermission(String, String): void</text><ellipse cx="18" cy="324.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="187" x="27" y="328.0464">dropVariable(String, String): void</text><ellipse cx="18" cy="337.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="615" x="27" y="340.8511">createForeignKeyConstraint(String, String, String, String, String, String, String, List&lt;String&gt;, boolean): void</text><ellipse cx="18" cy="350.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="27" y="353.6558">allocateTenant(String, String, String, String, String, String): int</text><ellipse cx="18" cy="363.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="196" x="27" y="366.4604">deleteTenantMeta(String, int): void</text><ellipse cx="18" cy="376.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="27" y="379.2651">findTenantId(String, String): int</text><ellipse cx="18" cy="388.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="27" y="392.0698">createTenantPartitions(Collection&lt;Table&gt;, String, int, int): void</text><ellipse cx="18" cy="401.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="27" y="404.8745">removeTenantPartitions(Collection&lt;Table&gt;, String, int): void</text><ellipse cx="18" cy="414.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="27" y="417.6792">dropDetachedPartitions(Collection&lt;Table&gt;, String, int): void</text><ellipse cx="18" cy="427.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="27" y="430.4839">updateTenantStatus(String, int, TenantStatus): void</text><ellipse cx="18" cy="440.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="261" x="27" y="443.2886">createSequence(String, String, long, int): void</text><ellipse cx="18" cy="452.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="197" x="27" y="456.0933">dropSequence(String, String): void</text><ellipse cx="18" cy="465.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="27" y="468.8979">alterSequenceRestartWith(String, String, long, int): void</text><ellipse cx="18" cy="478.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="27" y="481.7026">grantObjectPrivileges(String, String, Collection&lt;Privilege&gt;, String): void</text><ellipse cx="18" cy="491.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="429" x="27" y="494.5073">grantProcedurePrivileges(String, String, Collection&lt;Privilege&gt;, String): void</text><ellipse cx="18" cy="504.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="27" y="507.312">grantVariablePrivileges(String, String, Collection&lt;Privilege&gt;, String): void</text><ellipse cx="18" cy="516.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="427" x="27" y="520.1167">grantSequencePrivileges(String, String, Collection&lt;Privilege&gt;, String): void</text><ellipse cx="18" cy="529.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="27" y="532.9214">runStatement(IDatabaseSupplier&lt;T&gt;): T</text><ellipse cx="18" cy="542.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="233" x="27" y="545.7261">runStatement(IDatabaseStatement): void</text><ellipse cx="18" cy="555.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="27" y="558.5308">doesTableExist(String, String): boolean</text><ellipse cx="18" cy="568.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="155" x="27" y="571.3354">createSchema(String): void</text><ellipse cx="18" cy="580.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="27" y="584.1401">createUniqueConstraint(String, List&lt;String&gt;, String, String): void</text><ellipse cx="18" cy="593.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="27" y="596.9448">checkCompatibility(String): boolean</text><ellipse cx="18" cy="606.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="27" y="609.7495">useSessionVariable(): boolean</text><ellipse cx="18" cy="619.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="27" y="622.5542">createOrReplaceFunction(String, String, Supplier&lt;String&gt;): void</text><ellipse cx="18" cy="632.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="188" x="27" y="635.3589">dropFunction(String, String): void</text><ellipse cx="18" cy="644.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="27" y="648.1636">grantFunctionPrivileges(String, String, Collection&lt;Privilege&gt;, String): void</text><ellipse cx="18" cy="657.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="183" x="27" y="660.9683">dropTenantTablespace(int): void</text><ellipse cx="18" cy="670.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="27" y="673.7729">disableForeignKey(String, String, String): void</text><ellipse cx="18" cy="683.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="27" y="686.5776">enableForeignKey(String, String, String): void</text><ellipse cx="18" cy="696.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="196" x="27" y="699.3823">setIntegrityOff(String, String): void</text><ellipse cx="18" cy="708.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="240" x="27" y="712.187">setIntegrityUnchecked(String, String): void</text></a><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="234.5" y="735.0635">UMLDoclet 2.0.7, PlantUML 1.2019.12</text><!--MD5=[9f7dbb7d9417935fdc85377b6e2c4156]
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    interface "<size:14>IDatabaseAdapter\n<size:10>com.ibm.fhir.database.utils.api" as com.ibm.fhir.database.utils.api.IDatabaseAdapter [[IDatabaseAdapter.html]] {
        {abstract} +getTranslator(): IDatabaseTranslator
        {abstract} +createTablespace(String): void
        {abstract} +createTablespace(String, int): void
        {abstract} +dropTablespace(String): void
        {abstract} +detachPartition(String, String, String, String): void
        {abstract} +createTable(String, String, String, List<ColumnBase>, PrimaryKeyDef, IdentityDef, String): void
        {abstract} +createRowType(String, String, List<ColumnBase>): void
        {abstract} +createArrType(String, String, String, int): void
        {abstract} +dropType(String, String): void
        {abstract} +createOrReplaceProcedure(String, String, Supplier<String>): void
        {abstract} +dropProcedure(String, String): void
        {abstract} +createUniqueIndex(String, String, String, String, List<String>, List<String>): void
        {abstract} +createUniqueIndex(String, String, String, String, List<String>): void
        {abstract} +createIndex(String, String, String, String, List<String>): void
        {abstract} +createIntVariable(String, String): void
        {abstract} +createOrReplacePermission(String, String, String, String): void
        {abstract} +activateRowAccessControl(String, String): void
        {abstract} +deactivateRowAccessControl(String, String): void
        {abstract} +setIntVariable(String, String, int): void
        {abstract} +dropTable(String, String): void
        {abstract} +dropPermission(String, String): void
        {abstract} +dropVariable(String, String): void
        {abstract} +createForeignKeyConstraint(String, String, String, String, String, String, String, List<String>, boolean): void
        {abstract} +allocateTenant(String, String, String, String, String, String): int
        {abstract} +deleteTenantMeta(String, int): void
        {abstract} +findTenantId(String, String): int
        {abstract} +createTenantPartitions(Collection<Table>, String, int, int): void
        {abstract} +removeTenantPartitions(Collection<Table>, String, int): void
        {abstract} +dropDetachedPartitions(Collection<Table>, String, int): void
        {abstract} +updateTenantStatus(String, int, TenantStatus): void
        {abstract} +createSequence(String, String, long, int): void
        {abstract} +dropSequence(String, String): void
        {abstract} +alterSequenceRestartWith(String, String, long, int): void
        {abstract} +grantObjectPrivileges(String, String, Collection<Privilege>, String): void
        {abstract} +grantProcedurePrivileges(String, String, Collection<Privilege>, String): void
        {abstract} +grantVariablePrivileges(String, String, Collection<Privilege>, String): void
        {abstract} +grantSequencePrivileges(String, String, Collection<Privilege>, String): void
        {abstract} +runStatement(IDatabaseSupplier<T>): T
        {abstract} +runStatement(IDatabaseStatement): void
        {abstract} +doesTableExist(String, String): boolean
        {abstract} +createSchema(String): void
        {abstract} +createUniqueConstraint(String, List<String>, String, String): void
        {abstract} +checkCompatibility(String): boolean
        +useSessionVariable(): boolean
        {abstract} +createOrReplaceFunction(String, String, Supplier<String>): void
        {abstract} +dropFunction(String, String): void
        {abstract} +grantFunctionPrivileges(String, String, Collection<Privilege>, String): void
        {abstract} +dropTenantTablespace(int): void
        {abstract} +disableForeignKey(String, String, String): void
        {abstract} +enableForeignKey(String, String, String): void
        {abstract} +setIntegrityOff(String, String): void
        {abstract} +setIntegrityUnchecked(String, String): void
    }

    center footer UMLDoclet 2.0.7, PlantUML 1.2019.12
@enduml

PlantUML version 1.2019.12(Sun Nov 03 10:24:54 UTC 2019)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.7+10
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>