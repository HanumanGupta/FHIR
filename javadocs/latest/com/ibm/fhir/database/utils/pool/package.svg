<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1835px" preserveAspectRatio="none" style="width:774px;height:1835px;" version="1.1" viewBox="0 0 774 1835" width="774px" zoomAndPan="magnify"><defs><filter height="300%" id="fpmn8x6pt4eu4" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[1c55142926270b02ab6953046049c481]
cluster com.ibm.fhir.database.utils.pool--><polygon fill="#FFFFFF" filter="url(#fpmn8x6pt4eu4)" points="26,931,284,931,291,953.2969,752,953.2969,752,1795,26,1795,26,931" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="26" x2="291" y1="953.2969" y2="953.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="252" x="30" y="945.9951">com.ibm.fhir.database.utils.pool</text><!--MD5=[c4061de2b4ca09897990802c4ef9a5be]
cluster java.sql--><polygon fill="#FFFFFF" filter="url(#fpmn8x6pt4eu4)" points="14,16,79,16,86,38.2969,412,38.2969,412,906,14,906,14,16" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="14" x2="86" y1="38.2969" y2="38.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="59" x="18" y="30.9951">java.sql</text><!--MD5=[3d30f6fe734b0ef414cf6767e542597b]
cluster com.ibm.fhir.database.utils.api--><polygon fill="#FFFFFF" filter="url(#fpmn8x6pt4eu4)" points="441,381,688,381,695,403.2969,729,403.2969,729,541,441,541,441,381" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="441" x2="695" y1="403.2969" y2="403.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="241" x="445" y="395.9951">com.ibm.fhir.database.utils.api</text><!--MD5=[029720afc010f064c95967746fabd68b]
class com.ibm.fhir.database.utils.pool.PooledConnection--><a href="PooledConnection.html" target="_top" title="PooledConnection.html" xlink:actuate="onRequest" xlink:href="PooledConnection.html" xlink:show="new" xlink:title="PooledConnection.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fpmn8x6pt4eu4)" height="829.0859" id="com.ibm.fhir.database.utils.pool.PooledConnection" style="stroke: #A80036; stroke-width: 1.5;" width="357" x="34.5" y="958"/><ellipse cx="151.75" cy="974" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M154.7188,979.6406 Q154.1406,979.9375 153.5,980.0781 Q152.8594,980.2344 152.1563,980.2344 Q149.6563,980.2344 148.3281,978.5938 Q147.0156,976.9375 147.0156,973.8125 Q147.0156,970.6875 148.3281,969.0313 Q149.6563,967.375 152.1563,967.375 Q152.8594,967.375 153.5,967.5313 Q154.1563,967.6875 154.7188,967.9844 L154.7188,970.7031 Q154.0938,970.125 153.5,969.8594 Q152.9063,969.5781 152.2813,969.5781 Q150.9375,969.5781 150.25,970.6563 Q149.5625,971.7188 149.5625,973.8125 Q149.5625,975.9063 150.25,976.9844 Q150.9375,978.0469 152.2813,978.0469 Q152.9063,978.0469 153.5,977.7813 Q154.0938,977.5 154.7188,976.9219 L154.7188,979.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="172.25" y="978.1543">PooledConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35.5" x2="390.5" y1="990" y2="990"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="35.5" x2="390.5" y1="998" y2="998"/><ellipse cx="45.5" cy="1009" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="54.5" y="1012.2104">PooledConnection(PoolConnectionProvider, Connection)</text><ellipse cx="45.5" cy="1021.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="54.5" y="1025.0151">getWrapped(): Connection</text><ellipse cx="45.5" cy="1034.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="54.5" y="1037.8198">isReusable(): boolean</text><ellipse cx="45.5" cy="1047.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="54.5" y="1050.6245">incOpenCount(): int</text><ellipse cx="45.5" cy="1060.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="54.5" y="1063.4292">getOpenCount(): int</text><ellipse cx="45.5" cy="1073.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="54.5" y="1076.2339">forceClosed(): void</text><ellipse cx="45.5" cy="1085.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="54.5" y="1089.0386">clearWarnings(): void</text><ellipse cx="45.5" cy="1098.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="54.5" y="1101.8433">close(): void</text><ellipse cx="45.5" cy="1111.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="54.5" y="1114.6479">commit(): void</text><ellipse cx="45.5" cy="1124.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="54.5" y="1127.4526">createArrayOf(String, Object[]): Array</text><ellipse cx="45.5" cy="1137.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="54.5" y="1140.2573">createBlob(): Blob</text><ellipse cx="45.5" cy="1149.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="54.5" y="1153.062">createClob(): Clob</text><ellipse cx="45.5" cy="1162.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="54.5" y="1165.8667">createNClob(): NClob</text><ellipse cx="45.5" cy="1175.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="54.5" y="1178.6714">createSQLXML(): SQLXML</text><ellipse cx="45.5" cy="1188.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="54.5" y="1191.4761">createStatement(): Statement</text><ellipse cx="45.5" cy="1201.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="54.5" y="1204.2808">createStatement(int, int): Statement</text><ellipse cx="45.5" cy="1213.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="54.5" y="1217.0854">createStatement(int, int, int): Statement</text><ellipse cx="45.5" cy="1226.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="54.5" y="1229.8901">createStruct(String, Object[]): Struct</text><ellipse cx="45.5" cy="1239.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="54.5" y="1242.6948">getAutoCommit(): boolean</text><ellipse cx="45.5" cy="1252.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="54.5" y="1255.4995">getCatalog(): String</text><ellipse cx="45.5" cy="1265.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="54.5" y="1268.3042">getClientInfo(): Properties</text><ellipse cx="45.5" cy="1277.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="54.5" y="1281.1089">getClientInfo(String): String</text><ellipse cx="45.5" cy="1290.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="54.5" y="1293.9136">getHoldability(): int</text><ellipse cx="45.5" cy="1303.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="54.5" y="1306.7183">getMetaData(): DatabaseMetaData</text><ellipse cx="45.5" cy="1316.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="54.5" y="1319.5229">getTransactionIsolation(): int</text><ellipse cx="45.5" cy="1329.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="54.5" y="1332.3276">getTypeMap(): Map&lt;String, Class&lt;?&gt;&gt;</text><ellipse cx="45.5" cy="1341.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="54.5" y="1345.1323">getWarnings(): SQLWarning</text><ellipse cx="45.5" cy="1354.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="54.5" y="1357.937">isClosed(): boolean</text><ellipse cx="45.5" cy="1367.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="54.5" y="1370.7417">isReadOnly(): boolean</text><ellipse cx="45.5" cy="1380.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="54.5" y="1383.5464">isValid(int): boolean</text><ellipse cx="45.5" cy="1393.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="54.5" y="1396.3511">nativeSQL(String): String</text><ellipse cx="45.5" cy="1405.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="54.5" y="1409.1558">prepareCall(String): CallableStatement</text><ellipse cx="45.5" cy="1418.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="54.5" y="1421.9604">prepareCall(String, int, int): CallableStatement</text><ellipse cx="45.5" cy="1431.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="54.5" y="1434.7651">prepareCall(String, int, int, int): CallableStatement</text><ellipse cx="45.5" cy="1444.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="54.5" y="1447.5698">prepareStatement(String): PreparedStatement</text><ellipse cx="45.5" cy="1457.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="54.5" y="1460.3745">prepareStatement(String, int): PreparedStatement</text><ellipse cx="45.5" cy="1469.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="54.5" y="1473.1792">prepareStatement(String, int[]): PreparedStatement</text><ellipse cx="45.5" cy="1482.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="54.5" y="1485.9839">prepareStatement(String, String[]): PreparedStatement</text><ellipse cx="45.5" cy="1495.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="54.5" y="1498.7886">prepareStatement(String, int, int): PreparedStatement</text><ellipse cx="45.5" cy="1508.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="54.5" y="1511.5933">prepareStatement(String, int, int, int): PreparedStatement</text><ellipse cx="45.5" cy="1521.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="54.5" y="1524.3979">releaseSavepoint(Savepoint): void</text><ellipse cx="45.5" cy="1533.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="54.5" y="1537.2026">rollback(): void</text><ellipse cx="45.5" cy="1546.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="54.5" y="1550.0073">rollback(Savepoint): void</text><ellipse cx="45.5" cy="1559.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="54.5" y="1562.812">setAutoCommit(boolean): void</text><ellipse cx="45.5" cy="1572.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="54.5" y="1575.6167">setCatalog(String): void</text><ellipse cx="45.5" cy="1585.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="54.5" y="1588.4214">setClientInfo(Properties): void</text><ellipse cx="45.5" cy="1598.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="54.5" y="1601.2261">setClientInfo(String, String): void</text><ellipse cx="45.5" cy="1610.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="54.5" y="1614.0308">setHoldability(int): void</text><ellipse cx="45.5" cy="1623.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="54.5" y="1626.8354">setReadOnly(boolean): void</text><ellipse cx="45.5" cy="1636.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="54.5" y="1639.6401">setSavepoint(): Savepoint</text><ellipse cx="45.5" cy="1649.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="54.5" y="1652.4448">setSavepoint(String): Savepoint</text><ellipse cx="45.5" cy="1662.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="54.5" y="1665.2495">setTransactionIsolation(int): void</text><ellipse cx="45.5" cy="1674.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="54.5" y="1678.0542">setTypeMap(Map&lt;String, Class&lt;?&gt;&gt;): void</text><ellipse cx="45.5" cy="1687.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="54.5" y="1690.8589">isWrapperFor(Class&lt;?&gt;): boolean</text><ellipse cx="45.5" cy="1700.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="54.5" y="1703.6636">unwrap(Class&lt;T&gt;): T</text><polygon fill="#FFFF44" points="45.5,1708.2578,49.5,1712.2578,45.5,1716.2578,41.5,1712.2578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="54.5" y="1716.4683">closeWrapped(): void</text><ellipse cx="45.5" cy="1726.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="54.5" y="1729.2729">setSchema(String): void</text><ellipse cx="45.5" cy="1738.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="54.5" y="1742.0776">getSchema(): String</text><ellipse cx="45.5" cy="1751.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="54.5" y="1754.8823">abort(Executor): void</text><ellipse cx="45.5" cy="1764.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="54.5" y="1767.687">setNetworkTimeout(Executor, int): void</text><ellipse cx="45.5" cy="1777.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="54.5" y="1780.4917">getNetworkTimeout(): int</text></a><!--MD5=[c289e46921fc4dd7ab70892e2f41df83]
class com.ibm.fhir.database.utils.pool.PoolConnectionProvider--><a href="PoolConnectionProvider.html" target="_top" title="PoolConnectionProvider.html" xlink:actuate="onRequest" xlink:href="PoolConnectionProvider.html" xlink:show="new" xlink:title="PoolConnectionProvider.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fpmn8x6pt4eu4)" height="201.6563" id="com.ibm.fhir.database.utils.pool.PoolConnectionProvider" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="426.5" y="1271.5"/><ellipse cx="506.25" cy="1287.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M509.2188,1293.1406 Q508.6406,1293.4375 508,1293.5781 Q507.3594,1293.7344 506.6563,1293.7344 Q504.1563,1293.7344 502.8281,1292.0938 Q501.5156,1290.4375 501.5156,1287.3125 Q501.5156,1284.1875 502.8281,1282.5313 Q504.1563,1280.875 506.6563,1280.875 Q507.3594,1280.875 508,1281.0313 Q508.6563,1281.1875 509.2188,1281.4844 L509.2188,1284.2031 Q508.5938,1283.625 508,1283.3594 Q507.4063,1283.0781 506.7813,1283.0781 Q505.4375,1283.0781 504.75,1284.1563 Q504.0625,1285.2188 504.0625,1287.3125 Q504.0625,1289.4063 504.75,1290.4844 Q505.4375,1291.5469 506.7813,1291.5469 Q507.4063,1291.5469 508,1291.2813 Q508.5938,1291 509.2188,1290.4219 L509.2188,1293.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="149" x="526.75" y="1291.6543">PoolConnectionProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="427.5" x2="742.5" y1="1303.5" y2="1303.5"/><polygon fill="none" points="437.5,1310.5,433.5,1316.5,441.5,1316.5" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="446.5" y="1317.7104">allocated: int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="427.5" x2="742.5" y1="1324.3047" y2="1324.3047"/><ellipse cx="437.5" cy="1335.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="446.5" y="1338.5151">PoolConnectionProvider(IConnectionProvider, int)</text><ellipse cx="437.5" cy="1348.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="446.5" y="1351.3198">getConnection(): Connection</text><polygon fill="#FFFF44" points="437.5,1355.9141,441.5,1359.9141,437.5,1363.9141,433.5,1359.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="446.5" y="1364.1245">returnConnection(PooledConnection, boolean): void</text><polygon fill="#FFFF44" points="437.5,1368.7188,441.5,1372.7188,437.5,1376.7188,433.5,1372.7188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="446.5" y="1376.9292">clearActiveConnection(): void</text><polygon fill="#FFFF44" points="437.5,1381.5234,441.5,1385.5234,437.5,1389.5234,433.5,1385.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="446.5" y="1389.7339">checkConnectionFailure(SQLException): boolean</text><ellipse cx="437.5" cy="1399.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="446.5" y="1402.5386">getTranslator(): IDatabaseTranslator</text><ellipse cx="437.5" cy="1412.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="446.5" y="1415.3433">commitTransaction(): void</text><ellipse cx="437.5" cy="1424.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="446.5" y="1428.1479">rollbackTransaction(): void</text><ellipse cx="437.5" cy="1437.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="446.5" y="1440.9526">describe(String, StringBuilder, String): void</text><ellipse cx="437.5" cy="1450.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="446.5" y="1453.7573">getPoolSize(): int</text><ellipse cx="437.5" cy="1463.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="446.5" y="1466.562">close(): void</text></a><!--MD5=[5fcb86e028869ab1088d78730f70e338]
class java.sql.Connection--><a href="https://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html?is-external=true" target="_top" title="https://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html?is-external=true" xlink:actuate="onRequest" xlink:href="https://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html?is-external=true" xlink:show="new" xlink:title="https://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html?is-external=true" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fpmn8x6pt4eu4)" height="854.6953" id="java.sql.Connection" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="22" y="43"/><ellipse cx="173.25" cy="59" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M169.1719,54.7656 L169.1719,52.6094 L176.5625,52.6094 L176.5625,54.7656 L174.0938,54.7656 L174.0938,62.8438 L176.5625,62.8438 L176.5625,65 L169.1719,65 L169.1719,62.8438 L171.6406,62.8438 L171.6406,54.7656 L169.1719,54.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="193.75" y="63.1543">Connection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23" x2="403" y1="75" y2="75"/><ellipse cx="33" cy="86" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="42" y="89.2104">TRANSACTION_NONE: int</text><ellipse cx="33" cy="98.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="225" x="42" y="102.0151">TRANSACTION_READ_UNCOMMITTED: int</text><ellipse cx="33" cy="111.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="209" x="42" y="114.8198">TRANSACTION_READ_COMMITTED: int</text><ellipse cx="33" cy="124.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="212" x="42" y="127.6245">TRANSACTION_REPEATABLE_READ: int</text><ellipse cx="33" cy="137.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="185" x="42" y="140.4292">TRANSACTION_SERIALIZABLE: int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23" x2="403" y1="147.0234" y2="147.0234"/><ellipse cx="33" cy="158.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="170" x="42" y="161.2339">createStatement(): Statement</text><ellipse cx="33" cy="170.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="265" x="42" y="174.0386">prepareStatement(String): PreparedStatement</text><ellipse cx="33" cy="183.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="220" x="42" y="186.8433">prepareCall(String): CallableStatement</text><ellipse cx="33" cy="196.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="141" x="42" y="199.6479">nativeSQL(String): String</text><ellipse cx="33" cy="209.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="42" y="212.4526">setAutoCommit(boolean): void</text><ellipse cx="33" cy="222.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="148" x="42" y="225.2573">getAutoCommit(): boolean</text><ellipse cx="33" cy="234.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="81" x="42" y="238.062">commit(): void</text><ellipse cx="33" cy="247.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="83" x="42" y="250.8667">rollback(): void</text><ellipse cx="33" cy="260.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="69" x="42" y="263.6714">close(): void</text><ellipse cx="33" cy="273.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="110" x="42" y="276.4761">isClosed(): boolean</text><ellipse cx="33" cy="286.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="42" y="289.2808">getMetaData(): DatabaseMetaData</text><ellipse cx="33" cy="298.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="155" x="42" y="302.0854">setReadOnly(boolean): void</text><ellipse cx="33" cy="311.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="124" x="42" y="314.8901">isReadOnly(): boolean</text><ellipse cx="33" cy="324.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="42" y="327.6948">setCatalog(String): void</text><ellipse cx="33" cy="337.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="42" y="340.4995">getCatalog(): String</text><ellipse cx="33" cy="350.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="42" y="353.3042">setTransactionIsolation(int): void</text><ellipse cx="33" cy="362.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="42" y="366.1089">getTransactionIsolation(): int</text><ellipse cx="33" cy="375.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="42" y="378.9136">getWarnings(): SQLWarning</text><ellipse cx="33" cy="388.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="42" y="391.7183">clearWarnings(): void</text><ellipse cx="33" cy="401.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="206" x="42" y="404.5229">createStatement(int, int): Statement</text><ellipse cx="33" cy="414.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="42" y="417.3276">prepareStatement(String, int, int): PreparedStatement</text><ellipse cx="33" cy="426.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="264" x="42" y="430.1323">prepareCall(String, int, int): CallableStatement</text><ellipse cx="33" cy="439.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="42" y="442.937">getTypeMap(): Map&lt;String, Class&lt;?&gt;&gt;</text><ellipse cx="33" cy="452.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="246" x="42" y="455.7417">setTypeMap(Map&lt;String, Class&lt;?&gt;&gt;): void</text><ellipse cx="33" cy="465.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="42" y="468.5464">setHoldability(int): void</text><ellipse cx="33" cy="478.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="106" x="42" y="481.3511">getHoldability(): int</text><ellipse cx="33" cy="490.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="42" y="494.1558">setSavepoint(): Savepoint</text><ellipse cx="33" cy="503.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="180" x="42" y="506.9604">setSavepoint(String): Savepoint</text><ellipse cx="33" cy="516.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="42" y="519.7651">rollback(Savepoint): void</text><ellipse cx="33" cy="529.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="42" y="532.5698">releaseSavepoint(Savepoint): void</text><ellipse cx="33" cy="542.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="42" y="545.3745">createStatement(int, int, int): Statement</text><ellipse cx="33" cy="554.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="331" x="42" y="558.1792">prepareStatement(String, int, int, int): PreparedStatement</text><ellipse cx="33" cy="567.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="42" y="570.9839">prepareCall(String, int, int, int): CallableStatement</text><ellipse cx="33" cy="580.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="42" y="583.7886">prepareStatement(String, int): PreparedStatement</text><ellipse cx="33" cy="593.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="42" y="596.5933">prepareStatement(String, int[]): PreparedStatement</text><ellipse cx="33" cy="606.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="42" y="609.3979">prepareStatement(String, String[]): PreparedStatement</text><ellipse cx="33" cy="618.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="102" x="42" y="622.2026">createClob(): Clob</text><ellipse cx="33" cy="631.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="102" x="42" y="635.0073">createBlob(): Blob</text><ellipse cx="33" cy="644.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="118" x="42" y="647.812">createNClob(): NClob</text><ellipse cx="33" cy="657.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="42" y="660.6167">createSQLXML(): SQLXML</text><ellipse cx="33" cy="670.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="112" x="42" y="673.4214">isValid(int): boolean</text><ellipse cx="33" cy="683.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="42" y="686.2261">setClientInfo(String, String): void</text><ellipse cx="33" cy="695.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="169" x="42" y="699.0308">setClientInfo(Properties): void</text><ellipse cx="33" cy="708.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="155" x="42" y="711.8354">getClientInfo(String): String</text><ellipse cx="33" cy="721.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="42" y="724.6401">getClientInfo(): Properties</text><ellipse cx="33" cy="734.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="211" x="42" y="737.4448">createArrayOf(String, Object[]): Array</text><ellipse cx="33" cy="747.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="206" x="42" y="750.2495">createStruct(String, Object[]): Struct</text><ellipse cx="33" cy="759.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="137" x="42" y="763.0542">setSchema(String): void</text><ellipse cx="33" cy="772.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="114" x="42" y="775.8589">getSchema(): String</text><ellipse cx="33" cy="785.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="118" x="42" y="788.6636">abort(Executor): void</text><ellipse cx="33" cy="798.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="220" x="42" y="801.4683">setNetworkTimeout(Executor, int): void</text><ellipse cx="33" cy="811.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="140" x="42" y="814.2729">getNetworkTimeout(): int</text><ellipse cx="33" cy="823.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="42" y="827.0776">beginRequest(): void</text><ellipse cx="33" cy="836.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="42" y="839.8823">endRequest(): void</text><ellipse cx="33" cy="849.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="42" y="852.687">setShardingKeyIfValid(ShardingKey, ShardingKey, int): boolean</text><ellipse cx="33" cy="862.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="42" y="865.4917">setShardingKeyIfValid(ShardingKey, int): boolean</text><ellipse cx="33" cy="875.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="42" y="878.2964">setShardingKey(ShardingKey, ShardingKey): void</text><ellipse cx="33" cy="887.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="42" y="891.1011">setShardingKey(ShardingKey): void</text></a><!--MD5=[0cd46d2c97ce60ff8eef9d74595f0d43]
class com.ibm.fhir.database.utils.api.IConnectionProvider--><a href="../api/IConnectionProvider.html" target="_top" title="../api/IConnectionProvider.html" xlink:actuate="onRequest" xlink:href="../api/IConnectionProvider.html" xlink:show="new" xlink:title="../api/IConnectionProvider.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fpmn8x6pt4eu4)" height="124.8281" id="com.ibm.fhir.database.utils.api.IConnectionProvider" style="stroke: #A80036; stroke-width: 1.5;" width="272" x="449" y="408"/><ellipse cx="518.25" cy="424" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M514.1719,419.7656 L514.1719,417.6094 L521.5625,417.6094 L521.5625,419.7656 L519.0938,419.7656 L519.0938,427.8438 L521.5625,427.8438 L521.5625,430 L514.1719,430 L514.1719,427.8438 L516.6406,427.8438 L516.6406,419.7656 L514.1719,419.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="538.75" y="428.1543">IConnectionProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="450" x2="720" y1="440" y2="440"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="450" x2="720" y1="448" y2="448"/><ellipse cx="460" cy="459" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="469" y="462.2104">getConnection(): Connection</text><ellipse cx="460" cy="471.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="469" y="475.0151">getTranslator(): IDatabaseTranslator</text><ellipse cx="460" cy="484.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="148" x="469" y="487.8198">commitTransaction(): void</text><ellipse cx="460" cy="497.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="469" y="500.6245">rollbackTransaction(): void</text><ellipse cx="460" cy="510.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="246" x="469" y="513.4292">describe(String, StringBuilder, String): void</text><ellipse cx="460" cy="523.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="469" y="526.2339">getPoolSize(): int</text></a><!--MD5=[632fe15c1a6062aa936ff73bf0f40031]
reverse link java.sql.Connection to com.ibm.fhir.database.utils.pool.PooledConnection--><path d="M213,918.1397 C213,931.3787 213,944.6215 213,957.8225 " fill="none" id="java.sql.Connection&lt;-com.ibm.fhir.database.utils.pool.PooledConnection" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="206.0001,918.0565,213,898.0565,220.0001,918.0565,206.0001,918.0565" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[55def7a16164f76b8bd8e8c8e54457c9]
reverse link com.ibm.fhir.database.utils.api.IConnectionProvider to com.ibm.fhir.database.utils.pool.PoolConnectionProvider--><path d="M585,553.3197 C585,719.1107 585,1091.261 585,1271.2262 " fill="none" id="com.ibm.fhir.database.utils.api.IConnectionProvider&lt;-com.ibm.fhir.database.utils.pool.PoolConnectionProvider" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="578.0001,553.2108,585,533.2108,592.0001,553.2107,578.0001,553.2108" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="296" y="1822.2822">UMLDoclet 2.0.7, PlantUML 1.2019.12</text><!--MD5=[843d23adf651eff3c2854b17c15310fd]
@startuml
    namespace com.ibm.fhir.database.utils.pool {

        class PooledConnection [[PooledConnection.html]] {
            +PooledConnection(PoolConnectionProvider, Connection)
            +getWrapped(): Connection
            +isReusable(): boolean
            +incOpenCount(): int
            +getOpenCount(): int
            +forceClosed(): void
            +clearWarnings(): void
            +close(): void
            +commit(): void
            +createArrayOf(String, Object[]): Array
            +createBlob(): Blob
            +createClob(): Clob
            +createNClob(): NClob
            +createSQLXML(): SQLXML
            +createStatement(): Statement
            +createStatement(int, int): Statement
            +createStatement(int, int, int): Statement
            +createStruct(String, Object[]): Struct
            +getAutoCommit(): boolean
            +getCatalog(): String
            +getClientInfo(): Properties
            +getClientInfo(String): String
            +getHoldability(): int
            +getMetaData(): DatabaseMetaData
            +getTransactionIsolation(): int
            +getTypeMap(): Map<String, Class<?>>
            +getWarnings(): SQLWarning
            +isClosed(): boolean
            +isReadOnly(): boolean
            +isValid(int): boolean
            +nativeSQL(String): String
            +prepareCall(String): CallableStatement
            +prepareCall(String, int, int): CallableStatement
            +prepareCall(String, int, int, int): CallableStatement
            +prepareStatement(String): PreparedStatement
            +prepareStatement(String, int): PreparedStatement
            +prepareStatement(String, int[]): PreparedStatement
            +prepareStatement(String, String[]): PreparedStatement
            +prepareStatement(String, int, int): PreparedStatement
            +prepareStatement(String, int, int, int): PreparedStatement
            +releaseSavepoint(Savepoint): void
            +rollback(): void
            +rollback(Savepoint): void
            +setAutoCommit(boolean): void
            +setCatalog(String): void
            +setClientInfo(Properties): void
            +setClientInfo(String, String): void
            +setHoldability(int): void
            +setReadOnly(boolean): void
            +setSavepoint(): Savepoint
            +setSavepoint(String): Savepoint
            +setTransactionIsolation(int): void
            +setTypeMap(Map<String, Class<?>>): void
            +isWrapperFor(Class<?>): boolean
            +unwrap(Class<T>): T
            #closeWrapped(): void
            +setSchema(String): void
            +getSchema(): String
            +abort(Executor): void
            +setNetworkTimeout(Executor, int): void
            +getNetworkTimeout(): int
        }

        class PoolConnectionProvider [[PoolConnectionProvider.html]] {
            ~allocated: int
            +PoolConnectionProvider(IConnectionProvider, int)
            +getConnection(): Connection
            #returnConnection(PooledConnection, boolean): void
            #clearActiveConnection(): void
            #checkConnectionFailure(SQLException): boolean
            +getTranslator(): IDatabaseTranslator
            +commitTransaction(): void
            +rollbackTransaction(): void
            +describe(String, StringBuilder, String): void
            +getPoolSize(): int
            +close(): void
        }

        java.sql.Connection <|.. PooledConnection
        com.ibm.fhir.database.utils.api.IConnectionProvider <|.. PoolConnectionProvider
    }

    namespace java.sql {
        interface Connection [[https://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html?is-external=true]] {
            {static} +TRANSACTION_NONE: int
            {static} +TRANSACTION_READ_UNCOMMITTED: int
            {static} +TRANSACTION_READ_COMMITTED: int
            {static} +TRANSACTION_REPEATABLE_READ: int
            {static} +TRANSACTION_SERIALIZABLE: int
            {abstract} +createStatement(): Statement
            {abstract} +prepareStatement(String): PreparedStatement
            {abstract} +prepareCall(String): CallableStatement
            {abstract} +nativeSQL(String): String
            {abstract} +setAutoCommit(boolean): void
            {abstract} +getAutoCommit(): boolean
            {abstract} +commit(): void
            {abstract} +rollback(): void
            {abstract} +close(): void
            {abstract} +isClosed(): boolean
            {abstract} +getMetaData(): DatabaseMetaData
            {abstract} +setReadOnly(boolean): void
            {abstract} +isReadOnly(): boolean
            {abstract} +setCatalog(String): void
            {abstract} +getCatalog(): String
            {abstract} +setTransactionIsolation(int): void
            {abstract} +getTransactionIsolation(): int
            {abstract} +getWarnings(): SQLWarning
            {abstract} +clearWarnings(): void
            {abstract} +createStatement(int, int): Statement
            {abstract} +prepareStatement(String, int, int): PreparedStatement
            {abstract} +prepareCall(String, int, int): CallableStatement
            {abstract} +getTypeMap(): Map<String, Class<?>>
            {abstract} +setTypeMap(Map<String, Class<?>>): void
            {abstract} +setHoldability(int): void
            {abstract} +getHoldability(): int
            {abstract} +setSavepoint(): Savepoint
            {abstract} +setSavepoint(String): Savepoint
            {abstract} +rollback(Savepoint): void
            {abstract} +releaseSavepoint(Savepoint): void
            {abstract} +createStatement(int, int, int): Statement
            {abstract} +prepareStatement(String, int, int, int): PreparedStatement
            {abstract} +prepareCall(String, int, int, int): CallableStatement
            {abstract} +prepareStatement(String, int): PreparedStatement
            {abstract} +prepareStatement(String, int[]): PreparedStatement
            {abstract} +prepareStatement(String, String[]): PreparedStatement
            {abstract} +createClob(): Clob
            {abstract} +createBlob(): Blob
            {abstract} +createNClob(): NClob
            {abstract} +createSQLXML(): SQLXML
            {abstract} +isValid(int): boolean
            {abstract} +setClientInfo(String, String): void
            {abstract} +setClientInfo(Properties): void
            {abstract} +getClientInfo(String): String
            {abstract} +getClientInfo(): Properties
            {abstract} +createArrayOf(String, Object[]): Array
            {abstract} +createStruct(String, Object[]): Struct
            {abstract} +setSchema(String): void
            {abstract} +getSchema(): String
            {abstract} +abort(Executor): void
            {abstract} +setNetworkTimeout(Executor, int): void
            {abstract} +getNetworkTimeout(): int
            +beginRequest(): void
            +endRequest(): void
            +setShardingKeyIfValid(ShardingKey, ShardingKey, int): boolean
            +setShardingKeyIfValid(ShardingKey, int): boolean
            +setShardingKey(ShardingKey, ShardingKey): void
            +setShardingKey(ShardingKey): void
        }
    }

    namespace com.ibm.fhir.database.utils.api {
        interface IConnectionProvider [[../api/IConnectionProvider.html]] {
            {abstract} +getConnection(): Connection
            {abstract} +getTranslator(): IDatabaseTranslator
            {abstract} +commitTransaction(): void
            {abstract} +rollbackTransaction(): void
            {abstract} +describe(String, StringBuilder, String): void
            +getPoolSize(): int
        }
    }

    center footer UMLDoclet 2.0.7, PlantUML 1.2019.12
@enduml

PlantUML version 1.2019.12(Sun Nov 03 10:24:54 UTC 2019)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.8+10
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>